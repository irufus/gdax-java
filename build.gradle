apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'spring-boot'
apply plugin: 'maven'

group = 'irufus'
version = '0.8.2-SNAPSHOT'
project.archivesBaseName = 'gdax-java'
project.applicationName = 'gdax-java'
description = 'Client for the GDAX API'

buildscript {
    repositories {
        mavenCentral()
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "https://repo.spring.io/release" }

    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE"
    }
}

repositories {
    maven { url "http://central.maven.org/maven2/"}
    maven { url "http://repo1.maven.org/maven2/" }
    maven { url "https://repo.spring.io/release/"}

}

dependencies {
    compile 'junit:junit:4.12'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.6'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.6'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.6'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.8.6'
    compile 'org.springframework.boot:spring-boot-starter-web:1.5.4.RELEASE'
    compile 'org.springframework:spring-context:4.3.4.RELEASE'
    compile 'joda-time:joda-time:2.9.7'

    testCompile 'org.springframework:spring-test:4.3.5.RELEASE'
    testCompile 'org.springframework.boot:spring-boot-test:1.5.4.RELEASE'
}

tasks.withType(Jar) {
    destinationDir = file("${rootDir}/build/")
}

// file will be generated here: build/gdax-java-##.jar
jar {
    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    manifest {
        attributes 'Main-Class': 'com.coinbase.exchange.api.GdaxApiApplication'
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}